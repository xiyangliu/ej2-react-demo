{"version":3,"sources":["data.js","App.js","serviceWorker.js","index.js"],"names":["nodes","id","shape","type","ports","Action","offset","x","y","text","Decision","MergeNode","InitialNode","FinalNode","ForkNode","JoinNode","TimeEvent","App","state","selectedItem","enrichNode","node","constraints","NodeConstraints","Default","HideThumbs","Resize","Rotate","oldProperties","Object","toConsumableArray","forEach","_this","enrichPort","port","style","fill","strokeColor","width","height","PortConstraints","Draw","visibility","PortVisibility","Visible","enrichConnector","connector","strokeWidth","targetDecorator","enrichSymbol","symbol","react_default","a","createElement","className","symbolpalette_component","expandMode","palettes","expanded","symbols","title","getNodeDefaults","this","symbolHeight","symbolWidth","symbolMargin","left","right","top","bottom","getSymbolInfo","fit","ej2_react_base","services","UndoRedo","diagram_component","ref","diagram","selectionChange","select","snapSettings","getConnectorDefaults","React","Component","args","newValue","Node","console","log","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e77684b9.chunk.js","sourcesContent":["export const nodes = [\n  { id: \"Action\", shape: { type: \"UmlActivity\", shape: \"Action\" } },\n  { id: \"Decision\", shape: { type: \"UmlActivity\", shape: \"Decision\" } },\n  { id: \"MergeNode\", shape: { type: \"UmlActivity\", shape: \"MergeNode\" } },\n  { id: \"InitialNode\", shape: { type: \"UmlActivity\", shape: \"InitialNode\" } },\n  { id: \"FinalNode\", shape: { type: \"UmlActivity\", shape: \"FinalNode\" } },\n  { id: \"ForkNode\", shape: { type: \"UmlActivity\", shape: \"ForkNode\" } },\n  { id: \"JoinNode\", shape: { type: \"UmlActivity\", shape: \"JoinNode\" } },\n  { id: \"TimeEvent\", shape: { type: \"UmlActivity\", shape: \"TimeEvent\" } }\n];\n\nexport const ports = {\n  Action: [\n    {\n      offset: { x: 0, y: 0.5 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 1, y: 0.5 },\n      text: \"OUT - 1\"\n    },\n    {\n      offset: { x: 0.5, y: 1 },\n      text: \"OUT - 2\"\n    },\n    {\n      offset: { x: 0.5, y: 0 },\n      text: \"IN - 2\"\n    }\n  ],\n  Decision: [\n    {\n      offset: { x: 0, y: 0.5 },\n      text: \"OUT - 1\"\n    },\n    {\n      offset: { x: 1, y: 0.5 },\n      text: \"OUT - 2\"\n    },\n    {\n      offset: { x: 0.5, y: 1 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 0.5, y: 0 },\n      text: \"OUT - 3\"\n    }\n  ],\n  MergeNode: [\n    {\n      offset: { x: 0, y: 0.5 },\n      text: \"OUT - 1\"\n    },\n    {\n      offset: { x: 1, y: 0.5 },\n      text: \"OUT - 2\"\n    },\n    {\n      offset: { x: 0.5, y: 1 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 0.5, y: 0 },\n      text: \"OUT - 3\"\n    }\n  ],\n  InitialNode: [\n    {\n      offset: { x: 1, y: 0.5 },\n      text: \"OUT - 1\"\n    }\n  ],\n  FinalNode: [\n    {\n      offset: { x: 0, y: 0.5 },\n      text: \"IN - 1\"\n    }\n  ],\n  ForkNode: [\n    {\n      offset: { x: 0.5, y: 1 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 0.5, y: 0 },\n      text: \"OUT - 1\"\n    }\n  ],\n  JoinNode: [\n    {\n      offset: { x: 0, y: 0.5 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 1, y: 0.5 },\n      text: \"OUT - 1\"\n    }\n  ],\n  TimeEvent: [\n    {\n      offset: { x: 0.5, y: 1 },\n      text: \"IN - 1\"\n    },\n    {\n      offset: { x: 0.5, y: 0 },\n      text: \"OUT - 1\"\n    }\n  ]\n};\n","import React from \"react\";\nimport {\n  DiagramComponent,\n  Inject,\n  Node,\n  NodeConstraints,\n  PortConstraints,\n  PortVisibility,\n  SymbolPaletteComponent,\n  UndoRedo\n} from \"@syncfusion/ej2-react-diagrams\";\nimport { nodes, ports } from \"./data\";\n\nlet diagramInstance;\n\nclass App extends React.Component {\n  state = { selectedItem: null };\n\n  enrichNode = node => {\n    node.constraints =\n      (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n      ~NodeConstraints.Resize &\n      ~NodeConstraints.Rotate;\n    if (node.oldProperties.id) {\n      node.ports = [...ports[node.oldProperties.id]];\n      node.ports.forEach(this.enrichPort);\n    }\n  };\n\n  enrichPort = port => {\n    port.style = {\n      fill: \"#95adbe\",\n      strokeColor: \"#95adbe\"\n    };\n    port.width = 10;\n    port.height = 10;\n    port.constraints = PortConstraints.Default | PortConstraints.Draw;\n    port.visibility = PortVisibility.Visible;\n    port.shape = \"Circle\";\n  };\n\n  enrichConnector = connector => {\n    connector.type = \"Orthogonal\";\n    connector.style = { strokeColor: \"#574f7d\", strokeWidth: 1 };\n    connector.targetDecorator = {\n      width: 5,\n      height: 5,\n      style: { fill: \"#c\", strokeColor: \"#574f7d\" }\n    };\n  };\n\n  enrichSymbol = symbol => {\n    switch (symbol.id) {\n      case \"JoinNode\":\n        symbol.width = 20;\n        symbol.height = 50;\n        break;\n      case \"ForkNode\":\n        symbol.width = 50;\n        symbol.height = 20;\n        break;\n      case \"Decision\":\n      case \"MergeNode\":\n        symbol.width = 50;\n        symbol.height = 40;\n        break;\n      default:\n        symbol.width = 50;\n        symbol.height = 50;\n    }\n\n    if (\n      symbol.id === \"InitialNode\" ||\n      symbol.id === \"FinalNode\" ||\n      symbol.id === \"JoinNode\" ||\n      symbol.id === \"ForkNode\"\n    ) {\n      symbol.style.fill = \"#dff0ea\";\n    }\n    symbol.style.strokeColor = \"#95adbe\";\n  };\n\n  render() {\n    return (\n      <div className=\"ui equal height stretched grid internally celled\">\n        <div className=\"ui three wide column\">\n          <SymbolPaletteComponent\n            id=\"symbolpalette\"\n            expandMode=\"Multiple\"\n            palettes={[\n              {\n                id: \"nodes\",\n                expanded: true,\n                symbols: nodes,\n                title: \"节点\"\n              }\n            ]}\n            getNodeDefaults={this.enrichSymbol}\n            symbolHeight={80}\n            symbolWidth={80}\n            symbolMargin={{ left: 15, right: 15, top: 15, bottom: 15 }}\n            getSymbolInfo={() => ({ fit: true })}\n          >\n            <Inject services={[UndoRedo]} />\n          </SymbolPaletteComponent>\n        </div>\n        <div className=\"ui ten wide column\">\n          <DiagramComponent\n            id=\"diagram\"\n            ref={diagram => {\n              diagramInstance = diagram;\n            }}\n            selectionChange={select}\n            snapSettings={{ constraints: 0 }}\n            getNodeDefaults={this.enrichNode}\n            getConnectorDefaults={this.enrichConnector}\n          />\n        </div>\n        <div className=\"ui three wide column\" />\n      </div>\n    );\n  }\n}\n\nconst select = args => {\n  if (\n    args.state === \"Changed\" &&\n    args.newValue &&\n    args.newValue[0] instanceof Node\n  ) {\n    console.log(args.newValue[0]);\n  }\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}